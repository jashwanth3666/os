#include <stdio.h>

int main() {
    int totalMemory, processMemory[10], i, remainingMemory, numProcesses = 0;
    char userChoice = 'y';

    // Input: Total memory available
    printf("Enter the total memory available (in Bytes): ");
    scanf("%d", &totalMemory);
    remainingMemory = totalMemory; // Track remaining memory

    // Allocate memory to processes
    for (i = 0; userChoice == 'y'; i++, numProcesses++) {
        printf("\nEnter memory required for Process %d (in Bytes): ", i + 1);
        scanf("%d", &processMemory[i]);

        if (processMemory[i] <= remainingMemory) {
            printf("Memory is allocated for Process %d\n", i + 1);
            remainingMemory -= processMemory[i]; // Deduct allocated memory from remaining memory
        } else {
            printf("Memory is Full\n");
            break; // Stop allocation if memory is full
        }

        // Ask if the user wants to continue
        printf("Do you want to continue (y/n): ");
        scanf(" %c", &userChoice);
    }

    // Output: Summary of memory allocation
    printf("\n\nTotal Memory Available: %d", totalMemory);
    printf("\n\n\tPROCESS\t\tMEMORY ALLOCATED");
    for (i = 0; i < numProcesses; i++) {
        printf("\n\t%d\t\t%d", i + 1, processMemory[i]);
    }

    // Summary of total allocated memory and external fragmentation
    printf("\n\nTotal Memory Allocated: %d", totalMemory - remainingMemory);
    printf("\nTotal External Fragmentation: %d\n", remainingMemory);

    return 0;
}
